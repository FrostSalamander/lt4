// Entity names
string ENT_CANAL_LOCK = "atdm_switch_translate_lever_3";

float OBJ_FINAL = 4;
float OBJ_COMP_BOAT = 1;
float OBJ_COMP_DOOR = 2;
float OBJ_COMP_ESCAPE = 3;
float OBJ_KILL = 6;

boolean canTakeBoat()
{
	float stateBromwichInBoat = $player1.getObjectiveComp(OBJ_FINAL, OBJ_COMP_BOAT);
	float stateDoor = $player1.getObjectiveComp(OBJ_FINAL, OBJ_COMP_DOOR);
	float stateKill = $player1.getObjectiveState(OBJ_KILL);

	return (stateBromwichInBoat && stateDoor && stateKill);
}

// Set the canal lock to unfrobable once it's opened to prevent unwanted scenarios (door partially open, etc)
void setLockUnfrobable()
{
	sys.getEntity(ENT_CANAL_LOCK).setFrobable(0);
}

void start_spline_end()
{
	if (canTakeBoat())
	{
		// finish the objective
		$player1.setObjectiveComp(OBJ_FINAL, OBJ_COMP_ESCAPE, 1);
	}
}

/////////
// LIFT
/////////

// The fetch buttons target both the elevator and a atdm_target_callscriptfunction entity like so:
// The fetch button has a 'target' spawnarg which targets the elevator
// target0 targets the atdm_target_callscriptfunction
// the atdm_target_callscriptfunction calls this script, and targets the doors, and has 'foreach 1' set.
// The button also needs a spawnarg called position_entity_name whose value is the name of the multistate position entity
//
// The elevator needs to have the scriptobject spawnarg set to 'tdm_elevator'
//
// The multistate position entities need to target the doors, and set always_trigger_targets = 0

void controlLiftDoors(entity target, entity button, entity callscriptfunction)
{
    // The button that calls this is targeting the lift with 'target' spawnarg (i.e. not 'target0', 'target1', etc.)
    entity lift = button.getEntityKey("target");

    // Get the multistate position entity this button corresponds to
    // custom spawnarg: didn't want to use 'target' or 'position' because they activate unwanted functionality on some buttons
    entity multiStatePosition = button.getEntityKey("position_entity_name"); 

    // ensure the lift is idle and it's on the appropriate floor
    if ( !lift.isMoving() && (lift.getOrigin() == multiStatePosition.getOrigin()) )
    {
        if (target.IsOpen())
        {
            target.Close();
        }
        else
        {
            target.Open();
        }
    }
}

void main()
{
	sys.waitFrame();

	$bromwich.KO_Knockout($null_entity);
}